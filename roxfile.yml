# This is an ideal end-state for functionality

# Other files can be combined, but watch out for overwriting identical task names!
# Not yet implemented
supplemental_files: ["someotherfile.yml"]

# These checks require a single, well-formed SemVer version string as output from the command
version_requirements:
  - command: "docker version --format {{.Client.Version}}" # 20.10.23
    minimum_version: "20.10.7"
    maximum_version: "21.0.0"

  - command: "cargo watch --version"
    minimum_version: "8.1.7"
    split: true

  - command: "python --version" # Python 3.9.13
    # Splits on spaces and grabs the last output token,
    # useful for avoiding bash manipulation of output
    split: true 
    minimum_version: "3.8"

file_requirements: # Verify that these files exist
  - path: "Cargo.toml"
  
  - path: ".env"
    create_if_not_exists: true # Create the file if it doesn't exist 

tasks:

  #------------------------------------------------
  # This section is for unimplemented functionality
  #------------------------------------------------
  # Run only the specified params, errors if no match
  # rox docker_build -foo prod
  - name: cargo
    command: "cargo $foo"
    description: "Run various cargo subcommands/tools"
    workdir: "/src" # Specify a workdir for the command, which makes it easier to use with Monorepos

  #--------------------------------------------------------
  # This section is for _already_ implemented functionality
  #--------------------------------------------------------
  - name: db
    description: "Build the application dockerfile"
    parameters:
      - symbol: "{image_name}" # There is a "dumb" find and replace for this symbol in the command
        values: ["rox:local", "rox:latest"]
    command: "docker build . -t {image_name}"

  - name: dr
    description: "Run 'help' for the packaged Docker application"
    command: "docker run rox:local"
    pre_tasks: ["db"]
    
  - name: "wr"
    command: "cargo watch -c -x run"
    description: "Run the application, restarting on file changes"

  - name: "wt"
    command: "cargo watch -c -x test"
    description: "Rerun tests on every file change"

  - name: "clippy_ci"
    description: "Run Clippy with a non-zero exit if warnings are found."
    command: "cargo clippy -- -D warnings"

  - name: clippy_fix
    command: "cargo clippy"

  - name: test
    command: "cargo test"
    description: "Run tests"
    pre_tasks: ["run"]
    post_tasks: ["clippy_ci"]

  - name: run
    description: "Runs the 'help' command as a basic test"
    command: "cargo run help"

  - name: precommit
    description: "All things to run before a commit"
    pre_tasks: ["clippy_ci", "test"] # It is valid to have no command if there are pre/post tasks instead

  # Release-related
  - name: build_all
    description: "Build a release artifact binary and Docker image"
    pre_tasks: ["build_release", "build_release_image"]

  - name: build_release
    description: "Build a release binary with cargo."
    command: "cargo build --release"

  - name: build_release_image
    description: "Build a production image for Docker."
    command: "docker build . -t rox:latest"

  - name: invalid
    description: "This task will throw an error becasue it has nothing to do!"
