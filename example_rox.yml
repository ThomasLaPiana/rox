# This is an ideal end-state for functionality

# Other files can be combined, but watch out for overwriting identical target names!
supplemental_files: ["someotherfile.yml"]

# In YAML, _any_ value is considered True for booleans
# always_check_requirements: true 

# These checks require a single, well-formed SemVer version string as output from the command
# Eventually would like to be able to pin specific versions as well?
version_requirements:
  - command: "docker version --format {{.Client.Version}}" # 20.10.23
    minimum_version: "20.10.7"
    maximum_version: "21.0.0"

  - command: "python --version" # Python 3.9.13
    split: true # splits on spaces and grabs the last output token
    minimum_version: "3.8"

file_requirements: # Verify that these files exist
  - path: "Cargo.toml"
  
  - path: "example_rox.yml"
    create_if_not_exists: true # Create the file if it doesn't exist 

targets: # Shout out to Make

  # Run all parameters:
  # rox cargo

  # Run only the specified params, errors if no match
  # rox docker_build -foo prod
  - name: cargo
    parameters:
      - symbol: foo # Rox will look for and replace $foo in both the command and arguments
        values: ["fmt", "clippy", "test"]
    command: "cargo $foo"
    description: "Run various cargo subcommands/tools"
    pre: ["other_target"] # List of other targets to run before this one
    post: ["other_other_target"] # List of other targets to run before this one
    
  - name: watch_me_run
    command: "cargo watch -c -x run"
    description: "Watch & run"

  - name: clippy_check
    command: "cargo clippy -D warnings"

  - name: test
    command: "cargo test"
    description: "Run tests"

  # Runs all dependencies first, as a way to group, etc.
  # rox ci_suite
  - name: ci_suite
    depends_on: ["clippy_check, test"] # This order is preserved, unless run with the `-p` flag
    command: pass
