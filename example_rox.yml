# This is a target for eventual language support
# Example usage: rox docker_build
# Example usage in parallel: rox -p docker_build black

supplemental_files: ["someotherfile.yml"]
rox_version: 1.3

# These checks require a single, well-formed SemVer version string as output from the command
# Eventually would like to be able to pin specific versions as well?
version_requirements:
  - command: "docker version --format {{.Client.Version}}" # 20.10.23
    minimum_version: "20.10.7"
    maximum_version: "21.0.0"

  - command: "python --version" # Python 3.9.13
    split: true # splits on spaces and grabs the last output token
    minimum_version: "3.8"

file_requirements: # Verify that these files exist
  - ".env"

targets: # Shout out to Make

  # rox docker_build -foo dev
  # rox docker_build -foo prod
  # rox docker_build
  - name: docker_build
    parameters:
      - symbol: foo # Rox will look for and replace $foo in both the command and arguments
        values: ["prod", "dev"]
    command: "docker --target $foo . --quiet"
    
  - name: isort
    command: isort

  - name: black
    command: black
    arguments: ["src"]

  - name: format
    depends_on: ["black, isort"] # This order is preserved, unless run with the `-p` flag
